{"t":{"$date":"2024-01-09T10:08:15.063Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"2.1.1","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2023-12-04T14:43:54.960Z","gitVersion":"c7e70b65988d21c9020abf2bbd253a94b1d3316c","nodeVersion":"v20.9.0","opensslVersion":"3.0.10+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","deps":{"nodeDriverVersion":"6.3.0","libmongocryptVersion":"1.9.0-20230828+git8e7f69f1c0","libmongocryptNodeBindingsVersion":"6.0.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2024-01-09T10:08:15.145Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2024-01-09T10:08:15.146Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2024-01-09T10:08:15.182Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","driver":{"name":"nodejs|mongosh","version":"6.3.0|2.1.1"},"devtoolsConnectVersion":"2.4.3","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-01-09T10:08:15.193Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-01-09T10:08:15.208Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-01-09T10:08:15.226Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"659d1b0fef7f94f5a0952fe0","userId":null,"telemetryAnonymousId":"659d17f23e92e4133f2bdae9","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"7.0.4","node_version":"v20.9.0","mongosh_version":"2.1.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":null,"api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-01-09T10:08:15.230Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2024-01-09T10:08:15.231Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-01-09T10:08:15.329Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2024-01-09T10:08:15.333Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2024-01-09T10:08:15.334Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-01-09T10:08:15.334Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2024-01-09T10:08:15.336Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoServerError: Command getLog requires authentication","attr":{"stack":"MongoServerError: Command getLog requires authentication\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)","name":"MongoServerError","message":"Command getLog requires authentication","code":13,"ok":0,"codeName":"Unauthorized"}}
{"t":{"$date":"2024-01-09T10:08:15.338Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2024-01-09T10:08:15.339Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2024-01-09T10:08:15.411Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"2.1.1"}}
{"t":{"$date":"2024-01-09T10:08:16.321Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2024-01-09T10:08:20.231Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"admin"}}
{"t":{"$date":"2024-01-09T10:08:20.246Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoServerError: Command listCollections requires authentication","attr":{"stack":"MongoServerError: Command listCollections requires authentication\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)","name":"MongoServerError","message":"Command listCollections requires authentication","code":13,"ok":0,"codeName":"Unauthorized"}}
{"t":{"$date":"2024-01-09T10:08:20.249Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoServerError: Command listDatabases requires authentication","attr":{"stack":"MongoServerError: Command listDatabases requires authentication\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)","name":"MongoServerError","message":"Command listDatabases requires authentication","code":13,"ok":0,"codeName":"Unauthorized"}}
{"t":{"$date":"2024-01-09T10:08:20.252Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"659d1b0fef7f94f5a0952fe0","userId":null,"telemetryAnonymousId":"659d17f23e92e4133f2bdae9","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"7.0.4","node_version":"v20.9.0","mongosh_version":"2.1.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":null,"api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-01-09T10:08:25.358Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2024-01-09T10:08:25.367Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Command listDatabases requires authentication","attr":{"ok":0,"code":13,"codeName":"Unauthorized","message":"Command listDatabases requires authentication","name":"MongoServerError","stack":"MongoServerError: Command listDatabases requires authentication\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)","cause":null}}
{"t":{"$date":"2024-01-09T10:08:40.255Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"auth","class":"Database","db":"admin","arguments":{}}}
{"t":{"$date":"2024-01-09T10:08:40.266Z"},"s":"I","c":"MONGOSH-SP","id":1000000040,"ctx":"connect","msg":"Reconnect because of changed connection options"}
{"t":{"$date":"2024-01-09T10:08:40.268Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","driver":{"name":"nodejs|mongosh","version":"6.3.0|2.1.1"},"devtoolsConnectVersion":"2.4.3","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-01-09T10:08:40.269Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-01-09T10:08:40.294Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-01-09T10:13:01.527Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2024-01-09T10:13:08.280Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"optica"}}
{"t":{"$date":"2024-01-09T10:13:08.302Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"659d1b0fef7f94f5a0952fe0","userId":null,"telemetryAnonymousId":"659d17f23e92e4133f2bdae9","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"7.0.4","node_version":"v20.9.0","mongosh_version":"2.1.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":"DEFAULT","is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"7.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-01-09T10:13:28.751Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"customers\", {\n  validator: {\n    $jsonSchema: {\n      bsonType: \"object\",\n      required: [\"name\", \"telephone\"], // campos obligatorios a rellenar\n      properties: {\n        // _id: { bsonType: \"objectId\"},  // NO se pone porque mongoDB lo genera automaticamente\n        name: { bsonType: \"string\" },\n        address: { bsonType: \"string\" },\n        telephone: { bsonType: \"string\" },\n        email: { bsonType: \"string\" },\n        Register_date: { bsonType: \"date\" },\n      },\n    },\n  },\n});"}}
{"t":{"$date":"2024-01-09T10:13:28.758Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"optica","arguments":{"name":"customers","options":{"validator":{"$jsonSchema":{"bsonType":"object","required":["name","telephone"],"properties":{"name":{"bsonType":"string"},"address":{"bsonType":"string"},"telephone":{"bsonType":"string"},"email":{"bsonType":"string"},"Register_date":{"bsonType":"date"}}}}}}}}
{"t":{"$date":"2024-01-09T10:13:36.267Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2024-01-09T10:13:46.914Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"glasses\", {\n  validator: {\n    $jsonSchema: {\n      bsonType: \"object\",\n      required: [\n        \"brand\",\n        \"graduacion_L\",\n        \"graduacion_R\",\n        \"montura\",\n        \"precio\",\n        \"provider\",\n      ],\n      properties: {\n        brand: { bsonType: \"string\" },\n        graduation_L: { bsonType: \"string\" },\n        graduation_R: { bsonType: \"string\" },\n        glass_color_L: { bsonType: \"string\" },\n        glass_color_R: { bsonType: \"string\" },\n        frame_type: { bsonType: \"string\" },\n        provider: { bsonType: \"string\" },\n        price: { bsonType: \"number\" },\n      },\n    },\n  },\n});"}}
{"t":{"$date":"2024-01-09T10:13:46.919Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"optica","arguments":{"name":"glasses","options":{"validator":{"$jsonSchema":{"bsonType":"object","required":["brand","graduacion_L","graduacion_R","montura","precio","provider"],"properties":{"brand":{"bsonType":"string"},"graduation_L":{"bsonType":"string"},"graduation_R":{"bsonType":"string"},"glass_color_L":{"bsonType":"string"},"glass_color_R":{"bsonType":"string"},"frame_type":{"bsonType":"string"},"provider":{"bsonType":"string"},"price":{"bsonType":"number"}}}}}}}}
{"t":{"$date":"2024-01-09T10:14:46.171Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"providers\", {\n  validator: {\n    $jsonSchema: {\n      bsonType: \"object\",\n      required: [\"name\", \"nif\"],\n      properties: {\n        name: { bsonType: \"string\" },\n        adress: {\n          bsonType: \"object\",\n          properties: {\n            street: { bsonType: \"string\" },\n            num: { bsonType: \"string\" },\n            floor: { bsonType: \"string\" },\n            door: { bsonType: \"string\" },\n            city: { bsonType: \"string\" },\n            cp: { bsonType: \"string\" },\n            country: { bsonType: \"string\" },\n          },\n        },\n        telephone: { bsonType: \"string\" },\n        email: { bsonType: \"string\" },\n        nif: { bsonType: \"string\" },\n      },\n    },\n  },\n});"}}
{"t":{"$date":"2024-01-09T10:14:46.178Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"optica","arguments":{"name":"providers","options":{"validator":{"$jsonSchema":{"bsonType":"object","required":["name","nif"],"properties":{"name":{"bsonType":"string"},"adress":{"bsonType":"object","properties":{"street":{"bsonType":"string"},"num":{"bsonType":"string"},"floor":{"bsonType":"string"},"door":{"bsonType":"string"},"city":{"bsonType":"string"},"cp":{"bsonType":"string"},"country":{"bsonType":"string"}}},"telephone":{"bsonType":"string"},"email":{"bsonType":"string"},"nif":{"bsonType":"string"}}}}}}}}
{"t":{"$date":"2024-01-09T10:14:53.553Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"employee\", {\n  validator: {\n    $jsonSchema: {\n      bsonType: \"object\",\n      required: [\"name\", \"nif\"],\n      properties: {\n        name: { bsonType: \"string\" },\n        nif: { bsonType: \"string\" },\n      },\n    },\n  },\n});"}}
{"t":{"$date":"2024-01-09T10:14:53.562Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"optica","arguments":{"name":"employee","options":{"validator":{"$jsonSchema":{"bsonType":"object","required":["name","nif"],"properties":{"name":{"bsonType":"string"},"nif":{"bsonType":"string"}}}}}}}}
{"t":{"$date":"2024-01-09T10:14:59.087Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"sales\", {\n  validator: {\n    $jsonSchema: {\n      bsonType: \"object\",\n      required: [\"id_customer\", \"id_glasses\", \"register_date\"],\n      properties: {\n        id_customer: { bsonType: \"objectId\" },\n        id_glasses: { bsonType: \"objectId\" },\n        id_employee: { bsonType: \"objectId\" },\n        register_date: { bsonType: \"date\" },\n      },\n    },\n  },\n});"}}
{"t":{"$date":"2024-01-09T10:14:59.093Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"optica","arguments":{"name":"sales","options":{"validator":{"$jsonSchema":{"bsonType":"object","required":["id_customer","id_glasses","register_date"],"properties":{"id_customer":{"bsonType":"objectId"},"id_glasses":{"bsonType":"objectId"},"id_employee":{"bsonType":"objectId"},"register_date":{"bsonType":"date"}}}}}}}}
{"t":{"$date":"2024-01-09T10:15:06.159Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2024-01-09T10:16:53.512Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2024-01-09T10:17:32.941Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"restaurantes"}}
{"t":{"$date":"2024-01-09T10:17:32.961Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"659d1b0fef7f94f5a0952fe0","userId":null,"telemetryAnonymousId":"659d17f23e92e4133f2bdae9","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"7.0.4","node_version":"v20.9.0","mongosh_version":"2.1.1","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":"DEFAULT","is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"7.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-01-09T10:18:55.323Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2024-01-09T10:19:02.477Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2024-01-09T11:13:43.982Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2024-01-09T11:13:45.841Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find({\n  restaurant_id: 1,\n  borough: 1,\n  cuisine: 1,\n  nombre: /^Wil/,\n});"}}
{"t":{"$date":"2024-01-09T11:13:45.850Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"restaurant_id":1,"borough":1,"cuisine":1,"nombre":{}},"options":{}}}}
{"t":{"$date":"2024-01-09T11:14:40.305Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find();"}}
{"t":{"$date":"2024-01-09T11:14:40.310Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"options":{}}}}
{"t":{"$date":"2024-01-09T11:24:17.804Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { nombre: /^Wil/ },\n  {\n    restaurant_id: 1,\n    borough: 1,\n    cuisine: 1,\n  }\n);"}}
{"t":{"$date":"2024-01-09T11:24:17.810Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"nombre":{}},"options":{"projection":{"restaurant_id":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T11:25:03.291Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find({\n  nombre: /^Wil/,\n  restaurant_id: 1,\n  borough: 1,\n  cuisine: 1,\n});"}}
{"t":{"$date":"2024-01-09T11:25:03.296Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"nombre":{},"restaurant_id":1,"borough":1,"cuisine":1},"options":{}}}}
{"t":{"$date":"2024-01-09T11:29:19.015Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { nombre: { $regex: /^Wil/ } },\n  { restaurant_id: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T11:29:19.021Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"nombre":{"$regex":{}}},"options":{"projection":{"restaurant_id":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T11:32:24.449Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find({ name: /^Wil/ }, { restaurant_id: 1, borough: 1, cuisine: 1 });"}}
{"t":{"$date":"2024-01-09T11:32:24.455Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"name":{}},"options":{"projection":{"restaurant_id":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T12:15:49.490Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find({ name: /ces$/ }, { restaurant_id: 1, borough: 1, cuisine: 1 });"}}
{"t":{"$date":"2024-01-09T12:15:49.500Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"name":{}},"options":{"projection":{"restaurant_id":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T12:16:28.017Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { name: /ces$/ },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T12:16:28.023Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"name":{}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T12:16:28.617Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-01-09T12:16:41.762Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { name: /^Wil/ },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T12:16:41.767Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"name":{}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T12:17:25.531Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { name: /Reg/ },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T12:17:25.535Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"name":{}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T12:25:14.814Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find({\n  borough: \"Bronx\",\n  cuisine: { $in: [\"American\", \"chinese\"] },\n});"}}
{"t":{"$date":"2024-01-09T12:25:14.817Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"borough":"Bronx","cuisine":{"$in":["American","chinese"]}},"options":{}}}}
{"t":{"$date":"2024-01-09T12:51:41.248Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { \"grades.score\": { $lt: 10 } },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T12:51:41.252Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"grades.score":{"$lt":10}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:32:57.381Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    $and: [{ cuisine: \"Seafood\" }, { cuisine: { $ne: \"American\" } }, { cuisine: { $ne: \"Chinese\" } } ],\n    name: { $ne: /^Wil/ },\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:32:57.387Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"cuisine":{"$ne":"American"}},{"cuisine":{"$ne":"Chinese"}}],"name":{"$ne":{}}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:32:57.396Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Can't have regex as arg to $ne.","attr":{"ok":0,"code":2,"codeName":"BadValue","message":"Can't have regex as arg to $ne.","name":"MongoServerError","stack":"MongoServerError: Can't have regex as arg to $ne.\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)\n    at Socket.emit (node:events:514:28)\n    at Socket.emit (node:domain:488:12)\n    at addChunk (node:internal/streams/readable:376:12)\n    at readableAddChunk (node:internal/streams/readable:349:9)\n    at Readable.push (node:internal/streams/readable:286:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)\n    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)","cause":null}}
{"t":{"$date":"2024-01-09T14:33:33.004Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {$and: [{ cuisine: \"Seafood\" }, { cuisine: { $ne: \"American\" } }, { cuisine: { $ne: \"Chinese\" } } ], name: { $ne: /^Wil/ }},\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:33:33.008Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"cuisine":{"$ne":"American"}},{"cuisine":{"$ne":"Chinese"}}],"name":{"$ne":{}}},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:33:33.015Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Can't have regex as arg to $ne.","attr":{"ok":0,"code":2,"codeName":"BadValue","message":"Can't have regex as arg to $ne.","name":"MongoServerError","stack":"MongoServerError: Can't have regex as arg to $ne.\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2482302)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2480257)\n    at MessageStream.emit (node:events:514:28)\n    at MessageStream.emit (node:domain:488:12)\n    at p (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2512495)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:2:2511185)\n    at writeOrBuffer (node:internal/streams/writable:447:12)\n    at _write (node:internal/streams/writable:389:10)\n    at Writable.write (node:internal/streams/writable:393:10)\n    at Socket.ondata (node:internal/streams/readable:817:22)\n    at Socket.emit (node:events:514:28)\n    at Socket.emit (node:domain:488:12)\n    at addChunk (node:internal/streams/readable:376:12)\n    at readableAddChunk (node:internal/streams/readable:349:9)\n    at Readable.push (node:internal/streams/readable:286:10)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)\n    at TCP.callbackTrampoline (node:internal/async_hooks:130:17)","cause":null}}
{"t":{"$date":"2024-01-09T14:37:12.011Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    $and: [\n      { cuisine: \"Seafood\" },\n      {\n        $nor: [\n          { cuisine: { $ne: \"American\" } },\n          { cuisine: { $ne: \"Chinese\" } },\n          { name: /^Wil/ },\n        ],\n      },\n    ],\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:37:12.015Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"$nor":[{"cuisine":{"$ne":"American"}},{"cuisine":{"$ne":"Chinese"}},{"name":{}}]}]},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:37:57.982Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    $and: [\n      { cuisine: \"Seafood\" },\n      {\n        $nor: [\n          { cuisine: \"American\" },\n          { cuisine: \"Chinese\" },\n          { name: /^Wil/ }\n        ]\n      }\n    ]\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:37:57.986Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"$nor":[{"cuisine":"American"},{"cuisine":"Chinese"},{"name":{}}]}]},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:39:14.364Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"b.data.find(\n  {\n    $and: [\n      { cuisine: \"Seafood\" },\n      {\n        $nor: [\n          { cuisine: \"American\" },\n          { cuisine: \"Chinese\" },\n          { name: /^Wil/ },\n        ],\n      },\n    ],\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:39:14.371Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: b is not defined","attr":{"message":"b is not defined","name":"ReferenceError","stack":"ReferenceError: b is not defined\n    at REPL210:67:116\n    at REPL210:98:5\n    at REPL210:102:3\n    at Script.runInContext (node:vm:134:12)\n    at PrettyREPLServer.defaultEval (node:repl:596:29)\n    at bound (node:domain:432:15)\n    at PrettyREPLServer.runBound (node:domain:443:12)\n    at /tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:10:20943\n    at /tmp/m/boxednode/mongosh/node-v20.9.0/out/Release/node:10:20666\n    at node:internal/util:442:7","cause":null}}
{"t":{"$date":"2024-01-09T14:39:22.730Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    $and: [\n      { cuisine: \"Seafood\" },\n      {\n        $nor: [\n          { cuisine: \"American\" },\n          { cuisine: \"Chinese\" },\n          { name: /^Wil/ },\n        ],\n      },\n    ],\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:39:22.735Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"$nor":[{"cuisine":"American"},{"cuisine":"Chinese"},{"name":{}}]}]},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:42:59.795Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    $and: [\n      { cuisine: \"Seafood\" },\n      {\n        $nor: [\n          { cuisine: \"American\" },\n          { cuisine: \"Chinese\" },\n          { name: /^Wil/ },\n        ],\n      },\n    ],\n  },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T14:42:59.800Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"$nor":[{"cuisine":"American"},{"cuisine":"Chinese"},{"name":{}}]}]},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T14:46:53.005Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    score: 11,\n    \"grades.score\": \"2014-08-11T00:00:00Z\",\n  },\n  {\n    restaurant_id: 1,\n    name: 1,\n    \"grades.score\": 1,\n  }\n);"}}
{"t":{"$date":"2024-01-09T14:46:53.008Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"score":11,"grades.score":"2014-08-11T00:00:00Z"},"options":{"projection":{"restaurant_id":1,"name":1,"grades.score":1}}}}}
{"t":{"$date":"2024-01-09T14:48:28.999Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    \"grades.grade\": \"A\",\n    \"grades.score\": 11,\n    \"grades.date\": \"2014-08-11T00:00:00Z\",\n  },\n  {\n    restaurant_id: 1,\n    name: 1,\n    grades: 1,\n  }\n);"}}
{"t":{"$date":"2024-01-09T14:48:29.004Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"grades.grade":"A","grades.score":11,"grades.date":"2014-08-11T00:00:00Z"},"options":{"projection":{"restaurant_id":1,"name":1,"grades":1}}}}}
{"t":{"$date":"2024-01-09T14:52:15.437Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  {\n    grades: {\n      $elemMatch: {\n        grade: \"A\",\n        score: 11,\n        date: ISODate(\"2014-08-11T00:00:00Z\"),\n      },\n    },\n  },\n  {\n    restaurant_id: 1,\n    name: 1,\n    grades: 1,\n  }\n);"}}
{"t":{"$date":"2024-01-09T14:52:15.440Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"grades":{"$elemMatch":{"grade":"A","score":11,"date":"2014-08-11T00:00:00.000Z"}}},"options":{"projection":{"restaurant_id":1,"name":1,"grades":1}}}}}
{"t":{"$date":"2024-01-09T15:10:55.965Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { $and: [ { cuisine: \"Seafood\" }, { $nor: [{ cuisine: \"American\" }, { cuisine: \"Chinese\" }, { name: /^Wil/ } ] } ] },\n  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 }\n);"}}
{"t":{"$date":"2024-01-09T15:10:55.971Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"$and":[{"cuisine":"Seafood"},{"$nor":[{"cuisine":"American"},{"cuisine":"Chinese"},{"name":{}}]}]},"options":{"projection":{"restaurant_id":1,"name":1,"borough":1,"cuisine":1}}}}}
{"t":{"$date":"2024-01-09T15:12:00.851Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.data.find(\n  { grades: { $elemMatch: { grade: \"A\", score: 11, date: ISODate(\"2014-08-11T00:00:00Z\") } } },\n  { restaurant_id: 1, name: 1, grades: 1 }\n);"}}
{"t":{"$date":"2024-01-09T15:12:00.854Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"restaurantes","coll":"data","arguments":{"query":{"grades":{"$elemMatch":{"grade":"A","score":11,"date":"2014-08-11T00:00:00.000Z"}}},"options":{"projection":{"restaurant_id":1,"name":1,"grades":1}}}}}
